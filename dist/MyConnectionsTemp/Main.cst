<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
<%@ CodeTemplate Language="C#" TargetLanguage="Text" Src="" Inherits="" Debug="False" Description="Template description here." Output="None"%>
<%@ Register Name="Model" Template="Model.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="ModelExt" Template="ModelExt.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="DAL" Template="DAL.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Register Name="Validator" Template="Validator.cst" MergeProperties="False" ExcludeProperties="" %>
<%@ Property Name="Tables" Type="SchemaExplorer.TableSchemaCollection" Optional="False" Category="DB"%>
<%@ Property Name="NameSpaceDAL" Type="System.String" Default="DAL" Category="String" %>
<%@ Property Name="NameSpaceModel" Type="System.String" Default="Model" Category="String" %>
<%@ Property Name="ExtensionModelName" Type="System.String" Category="String" Default="T" %>
<%@ Property Name="ExtensionDALName" Type="System.String" Category="String" Default="D" %>
<script runat="template">
		private string _outputDirectory = String.Empty;
		[Editor(typeof(System.Windows.Forms.Design.FolderNameEditor), typeof(System.Drawing.Design.UITypeEditor))]
		[Description("The directory to output the results to.")]
		public string OutputDirectory 
		{
			get
			{		
				return _outputDirectory;
			}
			set
			{
				if (value != null && !value.EndsWith("\\"))
				{
					value += "\\";
			    }
				_outputDirectory = value;
			} 
		}
</script>
<%
        
    Response.Write("生成目录 " + this.OutputDirectory);
    Response.Write("\r\n");
    foreach(var table in Tables)
    {
        Model model = new Model();
        model.Table = table;
        model.NameSpaceModel = this.NameSpaceModel;
        model.ExtensionModelName=this.ExtensionModelName;
        model.RenderToFile(this.OutputDirectory + "Model/" + model.GetFileName(), true);
    	
        
        ModelExt modelext = new ModelExt();
        modelext.Table = table;
        modelext.NameSpaceModel = this.NameSpaceModel;
        modelext.ExtensionModelName=this.ExtensionModelName;
        modelext.RenderToFile(this.OutputDirectory + "ModelExt/" + modelext.GetFileName(), true);

        DAL dal = new DAL();
        dal.Table = table;

        dal.NameSpaceDAL = this.NameSpaceDAL;
        dal.NameSpaceModel = this.NameSpaceModel ;
        dal.ExtensionDALName=this.ExtensionDALName;
        dal.RenderToFile(this.OutputDirectory + "DAL/" + dal.GetFileName(), true);
        
        Validator validator=new Validator();
        validator.Table = table;
        validator.NameSpaceModel = this.NameSpaceModel;
        validator.RenderToFile(this.OutputDirectory + "Validator/" + validator.GetFileName(), true);

        Response.Write("生成成功 " + table.Name);
        Response.Write("\r\n");
    }
%>